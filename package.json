{
  "name": "pioarduino-ide",
  "version": "1.0.0",
  "publisher": "platformio",
  "engines": {
    "vscode": "^1.65.0"
  },
  "license": "Apache-2.0",
  "displayName": "pioarduino IDE",
  "description": "pioarduino a Community Fork of Platformio supporting Espressif (esp32/esp8266) Arduino, IDF",
  "categories": [
    "Programming Languages",
    "Linters",
    "Debuggers",
    "Testing",
    "Other"
  ],
  "keywords": [
    "embedded",
    "microcontroller",
    "xtensa",
    "risc-v",
    "espidf",
    "arduino"
  ],
  "main": "./dist/extension",
  "homepage": "https://github.com/pioarduino",
  "author": {
    "name": "PlatformIO Labs, pioarduino"
  },
  "bugs": {
    "url": "https://github.com/pioarduino/pioarduino-vscode-ide/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/pioarduino/pioarduino-vscode-ide.git"
  },
  "activationEvents": [
    "workspaceContains:**/platformio.ini",
    "onView:pioarduino-ide.quickAccess",
    "onView:pioarduino-ide.projectTasks",
    "onView:platformio-debug.peripherals",
    "onView:platformio-debug.registers",
    "onView:platformio-debug.memory",
    "onView:platformio-debug.disassembly",
    "onCommand:pioarduino-ide.showHome",
    "onCommand:pioarduino-ide.openPIOCoreCLI"
  ],
  "contributes": {
    "languages": [
      {
        "id": "platformio-debug.disassembly",
        "aliases": [
          "Disassembly"
        ],
        "extensions": [
          ".dbgasm"
        ]
      },
      {
        "id": "platformio-debug.memoryview",
        "aliases": [
          "Memory"
        ],
        "extensions": [
          ".dbgmem"
        ]
      },
      {
        "id": "platformio-debug.asm",
        "aliases": [
          "Assembly",
          "asm"
        ],
        "extensions": [
          ".asm",
          ".nasm",
          ".yasm",
          ".inc",
          ".s"
        ],
        "configuration": "./syntaxes/assembly-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "platformio-debug.disassembly",
        "scopeName": "source.platformio-debug-disassembly",
        "path": "./syntaxes/platformio-debug-disassembly.json"
      },
      {
        "language": "platformio-debug.memoryview",
        "scopeName": "source.platformio-debug-memoryview",
        "path": "./syntaxes/platformio-debug-memoryview.json"
      },
      {
        "language": "platformio-debug.asm",
        "scopeName": "source.platformio-debug-asm",
        "path": "./syntaxes/assembly.tmLanguage"
      }
    ],
    "commands": [
      {
        "command": "pioarduino-ide.showHome",
        "title": "PlatformIO Home",
        "category": "PlatformIO"
      },
      {
        "command": "pioarduino-ide.openPIOCoreCLI",
        "title": "Open pioarduino Core CLI",
        "category": "PlatformIO"
      },
      {
        "command": "pioarduino-ide.newTerminal",
        "title": "New Terminal",
        "category": "PlatformIO",
        "enablement": "pioCoreReady"
      },
      {
        "command": "pioarduino-ide.upgradeCore",
        "title": "Upgrade pioarduino Core",
        "category": "PlatformIO",
        "enablement": "pioCoreReady"
      },
      {
        "command": "pioarduino-ide.pickProjectEnv",
        "title": "Pick Project Environment",
        "category": "PlatformIO",
        "icon": "$(root-folder)",
        "enablement": "pioProjectReady"
      },
      {
        "command": "pioarduino-ide.setProjectPort",
        "title": "Set Project Port (upload/monitor/test)",
        "category": "PlatformIO",
        "icon": "$(plug)",
        "enablement": "pioProjectReady"
      },
      {
        "command": "pioarduino-ide.toggleMultiEnvProjectTasks",
        "title": "Toggle between Multi Environment Project Tasks",
        "category": "PlatformIO",
        "icon": "$(layers)",
        "enablement": "pioProjectTasksReady"
      },
      {
        "command": "pioarduino-ide.refreshProjectTasks",
        "title": "Refresh Project Tasks",
        "category": "PlatformIO",
        "icon": "$(refresh)",
        "enablement": "pioProjectTasksReady"
      },
      {
        "command": "pioarduino-ide.build",
        "title": "Build",
        "category": "PlatformIO",
        "icon": "$(check)",
        "enablement": "pioProjectTasksReady"
      },
      {
        "command": "pioarduino-ide.upload",
        "title": "Upload",
        "category": "PlatformIO",
        "icon": "$(arrow-right)",
        "enablement": "pioProjectTasksReady"
      },
      {
        "command": "pioarduino-ide.uploadAndMonitor",
        "title": "Upload and Monitor",
        "category": "PlatformIO",
        "icon": "$(arrow-right)",
        "enablement": "pioProjectTasksReady"
      },
      {
        "command": "pioarduino-ide.clean",
        "title": "Clean",
        "category": "PlatformIO",
        "icon": "$(trashcan)",
        "enablement": "pioProjectTasksReady"
      },
      {
        "command": "pioarduino-ide.serialMonitor",
        "title": "Serial Monitor",
        "category": "PlatformIO",
        "icon": "$(plug)",
        "enablement": "pioProjectReady"
      },
      {
        "command": "pioarduino-ide.test",
        "title": "Test",
        "category": "PlatformIO",
        "icon": "$(beaker)",
        "enablement": "pioProjectTasksReady"
      },
      {
        "command": "pioarduino-ide.rebuildProjectIndex",
        "title": "Rebuild IntelliSense Index",
        "category": "PlatformIO",
        "enablement": "pioProjectTasksReady"
      },
      {
        "command": "pioarduino-ide.startDebugging",
        "title": "Start Debugging",
        "category": "PlatformIO",
        "enablement": "pioProjectReady"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.peripherals.updateNode",
        "title": "Update Value",
        "enablement": "pioProjectReady"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.peripherals.selectedNode",
        "title": "Selected",
        "enablement": "pioProjectReady"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.registers.selectedNode",
        "title": "Selected",
        "enablement": "pioProjectReady"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.peripherals.copyValue",
        "title": "Copy Value",
        "enablement": "pioProjectReady"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.registers.copyValue",
        "title": "Copy Value",
        "enablement": "pioProjectReady"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.peripherals.setFormat",
        "title": "Set Value Format",
        "enablement": "pioProjectReady"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.registers.setFormat",
        "title": "Set Value Format",
        "enablement": "pioProjectReady"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.examineMemory",
        "title": " View Memory",
        "icon": {
          "light": "assets/icons/add.svg",
          "dark": "assets/icons/add-inverse.svg"
        },
        "enablement": "pioProjectReady"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.memory.clearHistory",
        "title": "Clear Memory View History",
        "icon": {
          "light": "assets/icons/closeall.svg",
          "dark": "assets/icons/closeall-inverse.svg"
        },
        "enablement": "pioProjectReady"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.memory.deleteHistoryItem",
        "title": "Delete",
        "enablement": "pioProjectReady"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.viewDisassembly",
        "title": "View Disassembly (Function)",
        "enablement": "pioProjectReady"
      },
      {
        "category": "PlatformIO Debug",
        "command": "platformio-debug.setForceDisassembly",
        "title": "Set Force Disassembly",
        "enablement": "pioProjectReady"
      }
    ],
    "breakpoints": [
      {
        "language": "c"
      },
      {
        "language": "cpp"
      },
      {
        "language": "platformio-debug.asm"
      },
      {
        "language": "platformio-debug.disassembly"
      }
    ],
    "debuggers": [
      {
        "configurationAttributes": {
          "launch": {
            "properties": {
              "executable": {
                "description": "Path of firmware or program",
                "type": "string"
              },
              "toolchainBinDir": {
                "description": "Path of toolchain binary directory",
                "type": "string"
              },
              "projectEnvName": {
                "description": "Working project environment",
                "type": "string"
              },
              "svdPath": {
                "default": null,
                "description": "Path to an SVD file describing the peripherals of the microcontroller",
                "type": [
                  "string",
                  "null"
                ]
              },
              "loadMode": {
                "description": "Control when PlatformIO should load debugging firmware to the end target (see docs for `debug_load_mode` option)",
                "default": null,
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "always",
                  "modified",
                  "manual"
                ]
              },
              "showDevDebugOutput": {
                "default": false,
                "description": "Prints all GDB responses to the console",
                "type": "boolean"
              }
            },
            "required": [
              "executable",
              "toolchainBinDir"
            ]
          }
        },
        "initialConfigurations": [
          {
            "name": "PlatformIO Debugger",
            "request": "launch",
            "type": "platformio-debug",
            "toolchainBinDir": "/usr/local/bin"
          }
        ],
        "configurationSnippets": [
          {
            "body": {
              "name": "${6:PlatformIO Debugger}",
              "request": "launch",
              "type": "platformio-debug",
              "executable": ".pio/build/myenv/firmware.elf",
              "toolchainBinDir": "/usr/local/bin"
            },
            "description": "PlatformIO Debugger",
            "label": "PlatformIO Debugger"
          }
        ],
        "label": "PlatformIO Debugger",
        "program": "./node_modules/platformio-vscode-debug/dist/adapter.js",
        "runtime": "node",
        "type": "platformio-debug"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "platformio-debug.examineMemory",
          "when": "debugType == platformio-debug"
        },
        {
          "command": "platformio-debug.memory.clearHistory",
          "when": "debugType == platformio-debug"
        },
        {
          "command": "platformio-debug.viewDisassembly",
          "when": "debugType == platformio-debug"
        },
        {
          "command": "platformio-debug.setForceDisassembly",
          "when": "debugType == platformio-debug"
        }
      ],
      "view/item/context": [
        {
          "command": "platformio-debug.peripherals.updateNode",
          "when": "view == platformio-debug.peripherals && viewItem == field"
        },
        {
          "command": "platformio-debug.peripherals.updateNode",
          "when": "view == platformio-debug.peripherals && viewItem == registerRW"
        },
        {
          "command": "platformio-debug.peripherals.updateNode",
          "when": "view == platformio-debug.peripherals && viewItem == registerWO"
        },
        {
          "command": "platformio-debug.peripherals.copyValue",
          "when": "view == platformio-debug.peripherals && viewItem == field"
        },
        {
          "command": "platformio-debug.peripherals.copyValue",
          "when": "view == platformio-debug.peripherals && viewItem == registerRW"
        },
        {
          "command": "platformio-debug.peripherals.copyValue",
          "when": "view == platformio-debug.peripherals && viewItem == registerRO"
        },
        {
          "command": "platformio-debug.registers.copyValue",
          "when": "view == platformio-debug.registers && viewItem == register"
        },
        {
          "command": "platformio-debug.registers.copyValue",
          "when": "view == platformio-debug.registers && viewItem == field"
        },
        {
          "command": "platformio-debug.peripherals.setFormat",
          "when": "view == platformio-debug.peripherals"
        },
        {
          "command": "platformio-debug.registers.setFormat",
          "when": "view == platformio-debug.registers"
        },
        {
          "command": "platformio-debug.memory.deleteHistoryItem",
          "when": "view == platformio-debug.memory",
          "group": "inline"
        }
      ],
      "view/title": [
        {
          "command": "pioarduino-ide.pickProjectEnv",
          "when": "pioProjectTasksReady && pioMultiEnvProject && view == pioarduino-ide.projectTasks",
          "group": "navigation"
        },
        {
          "command": "pioarduino-ide.toggleMultiEnvProjectTasks",
          "when": "pioProjectTasksReady && view == pioarduino-ide.projectTasks",
          "group": "navigation"
        },
        {
          "command": "pioarduino-ide.refreshProjectTasks",
          "when": "pioProjectTasksReady && view == pioarduino-ide.projectTasks",
          "group": "navigation"
        },
        {
          "command": "platformio-debug.examineMemory",
          "when": "debugType == platformio-debug && view == platformio-debug.memory",
          "group": "navigation"
        },
        {
          "command": "platformio-debug.memory.clearHistory",
          "when": "debugType == platformio-debug && view == platformio-debug.memory",
          "group": "navigation"
        }
      ],
      "editor/title/run": [
        {
          "command": "pioarduino-ide.build",
          "when": "pioProjectReady && config.pioarduino-ide.showEditorTitleShortcuts",
          "group": "pio_run@0"
        },
        {
          "command": "pioarduino-ide.upload",
          "when": "pioProjectReady && config.pioarduino-ide.showEditorTitleShortcuts",
          "group": "pio_run@1"
        },
        {
          "command": "pioarduino-ide.test",
          "when": "pioProjectReady && config.pioarduino-ide.showEditorTitleShortcuts",
          "group": "pio_run@2"
        },
        {
          "command": "pioarduino-ide.clean",
          "when": "pioProjectReady && config.pioarduino-ide.showEditorTitleShortcuts",
          "group": "pio_run@3"
        }
      ],
      "editor/title": [
        {
          "command": "pioarduino-ide.serialMonitor",
          "when": "pioCoreReady && config.pioarduino-ide.showEditorTitleShortcuts",
          "group": "navigation"
        }
      ],
      "file/newFile": [
        {
          "command": "pioarduino-ide.showHome",
          "when": "pioCoreReady",
          "group": "navigation"
        }
      ],
      "touchBar": [
        {
          "command": "pioarduino-ide.build",
          "when": "pioProjectReady && config.pioarduino-ide.showEditorTitleShortcuts",
          "group": "z_pio_run@0"
        },
        {
          "command": "pioarduino-ide.upload",
          "when": "pioProjectReady && config.pioarduino-ide.showEditorTitleShortcuts",
          "group": "z_pio_run@1"
        },
        {
          "command": "pioarduino-ide.test",
          "when": "pioProjectReady && config.pioarduino-ide.showEditorTitleShortcuts",
          "group": "z_pio_run@2"
        },
        {
          "command": "pioarduino-ide.clean",
          "when": "pioProjectReady && config.pioarduino-ide.showEditorTitleShortcuts",
          "group": "z_pio_run@3"
        },
        {
          "command": "pioarduino-ide.serialMonitor",
          "when": "pioCoreReady && config.pioarduino-ide.showEditorTitleShortcuts",
          "group": "z_pio_tools"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "platformio",
          "title": "PlatformIO",
          "icon": "assets/icons/platformio-activity-icon.svg"
        }
      ]
    },
    "views": {
      "platformio": [
        {
          "id": "pioarduino-ide.projectTasks",
          "name": "Project Tasks",
          "when": "pioCoreReady",
          "type": "tree"
        },
        {
          "id": "pioarduino-ide.quickAccess",
          "name": "Quick Access",
          "type": "tree"
        }
      ],
      "debug": [
        {
          "id": "platformio-debug.peripherals",
          "name": "Peripherals"
        },
        {
          "id": "platformio-debug.registers",
          "name": "Registers"
        },
        {
          "id": "platformio-debug.memory",
          "name": "Memory"
        },
        {
          "id": "platformio-debug.disassembly",
          "name": "Disassembly"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "pioarduino-ide.projectTasks",
        "contents": "You have not yet opened a pioarduino project.\nYou can open an existing PlatformIO-based project (a folder that contains [platformio.ini](https://bit.ly/vscode-platformio-ini-docs) file).\n[Pick a folder](command:workbench.action.files.openFolder)\nYou can create a new PlatformIO Project or explore examples using PlatformIO Home.\n[Create New Project](command:pioarduino-ide.showHome)"
      },
      {
        "view": "pioarduino-ide.quickAccess",
        "contents": "Initializing pioarduino Core..."
      }
    ],
    "walkthroughs": [
      {
        "id": "pioarduino-ide.welcome",
        "title": "Get started with pioarduino IDE",
        "description": "An great IDE solution for Microsoft Visual Studio Code",
        "steps": [
          {
            "id": "platformio-core",
            "title": "Rich CLI developed for Humans",
            "description": "pioarduino Core is the heart of pioarduino IDE\n[Install pioarduino Core](command:pioarduino-ide.openPIOCoreCLI)",
            "media": {
              "image": "assets/welcome/platformio-core-cli-demo.png",
              "altText": "pioarduino Core CLI Demo"
            },
            "completionEvents": [
              "onContext:pioCoreReady"
            ]
          },
          {
            "id": "platformio.ini",
            "title": "Platform-agnostic shareable configuration",
            "description": "[platformio.ini](https://bit.ly/vscode-platformio-ini-docs) is the single configuration file that lets you set up your development environment and share your configurations with your team or organization.\n[Learn More](https://bit.ly/vscode-platformio-ini-docs)",
            "media": {
              "markdown": "assets/welcome/platformio-ini-example.md"
            },
            "completionEvents": [
              "onLink:https://bit.ly/vscode-platformio-ini-docs"
            ]
          },
          {
            "id": "platformio-home",
            "title": "Advanced project management",
            "description": "Boost your product development with [PIO Home](https://bit.ly/vscode-platformio-home-docs) – a powerful, modern, and interactive user interface for advanced project management.\nIt allows you to enhance your project source code with advanced instruments such as firmware explorer, memory inspection, and static code analysis.\n[Open PIO Home](command:pioarduino-ide.showHome)\nTip: Use 🏠 icon at the bottom status bar.",
            "media": {
              "image": "assets/welcome/project-inspection-demo.png",
              "altText": "pioarduino Project Inspection Demo"
            }
          },
          {
            "id": "ready-to-start",
            "title": "Ready to start?",
            "description": "Navigate to the pioarduino IDE View in the left activity bar and open an existing project or create a new one.\n[Open pioarduino IDE View](command:workbench.view.extension.platformio)",
            "media": {
              "image": "assets/welcome/pioarduino-ide-view-demo.png",
              "altText": "pioarduino IDE View"
            },
            "completionEvents": [
              "onView:pioarduino-ide.projectTasks"
            ]
          }
        ]
      }
    ],
    "keybindings": [
      {
        "command": "pioarduino-ide.build",
        "key": "ctrl+alt+b",
        "when": "pioProjectReady"
      },
      {
        "command": "pioarduino-ide.upload",
        "key": "ctrl+alt+u",
        "when": "pioProjectReady"
      },
      {
        "command": "pioarduino-ide.serialMonitor",
        "key": "ctrl+alt+s",
        "when": "pioProjectReady"
      }
    ],
    "taskDefinitions": [
      {
        "type": "PlatformIO",
        "required": [
          "task"
        ],
        "properties": {
          "task": {
            "type": "string",
            "description": "pioarduino Task ID"
          }
        }
      }
    ],
    "problemMatchers": [
      {
        "name": "platformio",
        "owner": "cpp",
        "fileLocation": [
          "relative",
          "${workspaceFolder}"
        ],
        "pattern": {
          "regexp": "^([^:\\n]+):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    ],
    "configurationDefaults": {
      "C_Cpp.debugShortcut": false
    },
    "configuration": {
      "type": "object",
      "title": "pioarduino IDE",
      "properties": {
        "pioarduino-ide.activateProjectOnTextEditorChange": {
          "type": "boolean",
          "default": false,
          "description": "Automatically activate project depending on an active opened text editor"
        },
        "pioarduino-ide.autoOpenPlatformIOIniFile": {
          "type": "boolean",
          "default": true,
          "description": "Automatically open the `platformio.ini` file from a project when no other editors are opened"
        },
        "pioarduino-ide.autoCloseSerialMonitor": {
          "type": "boolean",
          "default": true,
          "description": "Automatically close Serial Port Monitor before uploading/testing"
        },
        "pioarduino-ide.autoRebuildAutocompleteIndex": {
          "type": "boolean",
          "default": true,
          "description": "Automatically rebuild the project IntelliSense index when platformio.ini is changed or when new libraries are installed"
        },
        "pioarduino-ide.showEditorTitleShortcuts": {
          "type": "boolean",
          "default": true,
          "description": "Show Build, Upload, Clean, and other buttons in the editor title bar"
        },
        "pioarduino-ide.autoPreloadEnvTasks": {
          "type": "boolean",
          "default": false,
          "description": "Automatically preload ALL project environment tasks"
        },
        "pioarduino-ide.customPATH": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Custom PATH for the `platformio` command, if you prefer to use a custom version of pioarduino Core. Fill in the result of the system terminal command `echo $PATH` (Unix) / `echo %PATH%` (Windows)."
        },
        "pioarduino-ide.reopenSerialMonitorDelay": {
          "type": "integer",
          "default": 0,
          "minimum": 0,
          "description": "Time in milliseconds after which the Serial Port Monitor is reopened"
        },
        "pioarduino-ide.useBuiltinPython": {
          "type": "boolean",
          "default": true,
          "description": "Use a portable Python 3 Interpreter if available"
        },
        "pioarduino-ide.useBuiltinPIOCore": {
          "type": "boolean",
          "default": true,
          "description": "Use a built-in pioarduino Core"
        },
        "pioarduino-ide.useDevelopmentPIOCore": {
          "type": "boolean",
          "default": false,
          "description": "Use a development version of pioarduino Core"
        },
        "pioarduino-ide.disablePIOHomeStartup": {
          "type": "boolean",
          "default": true,
          "description": "Disable showing PIO Home at startup"
        },
        "pioarduino-ide.pioHomeServerHttpHost": {
          "type": "string",
          "default": "127.0.0.1",
          "description": "PIO Home server HTTP host (default is 127.0.0.1, but in case of dockerized environments 0.0.0.0)"
        },
        "pioarduino-ide.pioHomeServerHttpPort": {
          "type": "integer",
          "description": "PIO Home server HTTP port (the default value 0 automatically assigns a free port in the range [45000..45999])"
        },
        "pioarduino-ide.customPyPiIndexUrl": {
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Custom base URL of the Python Package Index (default `https://pypi.org/simple`)"
        },
        "pioarduino-ide.toolbar": {
          "description": "pioarduino Toolbar",
          "type": "array",
          "items": {
            "type": "object",
            "title": "Button",
            "properties": {
              "text": {
                "type": "string",
                "description": "The text to show for the button",
                "required": true
              },
              "tooltip": {
                "type": "string",
                "description": "The tooltip text when you hover over this button"
              },
              "commands": {
                "description": "The button command or list of commands to execute",
                "anyOf": [
                  {
                    "type": "string",
                    "title": "The command identifier"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "title": "The command identifier"
                    }
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "title": "Command",
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "The command identifier"
                        },
                        "args": {
                          "type": [
                            "array",
                            "string",
                            "object",
                            "null"
                          ],
                          "description": "The button command arguments",
                          "default": null
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "default": [
            {
              "text": "$(home)",
              "tooltip": "pioarduino: Home",
              "commands": "pioarduino-ide.showHome"
            },
            {
              "text": "$(check)",
              "tooltip": "pioarduino: Build",
              "commands": "pioarduino-ide.build"
            },
            {
              "text": "$(arrow-right)",
              "tooltip": "pioarduino: Upload",
              "commands": "pioarduino-ide.upload"
            },
            {
              "text": "$(trashcan)",
              "tooltip": "pioarduino: Clean",
              "commands": "pioarduino-ide.clean"
            },
            {
              "text": "$(beaker)",
              "tooltip": "pioarduino: Test",
              "commands": "pioarduino-ide.test"
            },
            {
              "text": "$(plug)",
              "tooltip": "pioarduino: Serial Monitor",
              "commands": "pioarduino-ide.serialMonitor"
            },
            {
              "text": "$(terminal)",
              "tooltip": "pioarduino: New Terminal",
              "commands": "pioarduino-ide.newTerminal"
            }
          ]
        }
      }
    }
  },
  "scripts": {
    "build": "webpack --mode production",
    "lint": "eslint .eslintrc.js src",
    "format": "prettier --single-quote --print-width 88 --write \"src/**/*.js\"",
    "vscode:package": "webpack --mode production && vsce package"
  },
  "dependencies": {
    "fs-plus": "~3.1.1",
    "platformio-node-helpers": "~11.2.0",
    "platformio-vscode-debug": "~1.4.1"
  },
  "devDependencies": {
    "@types/node": "~14",
    "@types/vscode": "~1.65.0",
    "@vscode/vsce": "~3.0.0",
    "eslint": "~8.56.0",
    "eslint-import-resolver-webpack": "~0.13.8",
    "eslint-plugin-import": "~2.29.1",
    "prettier": "~3.2.4",
    "webpack": "~5.90.0",
    "webpack-cli": "~5.1.4"
  },
  "extensionDependencies": [
    "ms-vscode.cpptools"
  ]
}